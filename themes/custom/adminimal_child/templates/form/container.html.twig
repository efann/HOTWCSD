{#
/**
 * @file
 * Theme override of a container used to wrap child elements.
 *
 * Used for grouped form items. Can also be used as a theme wrapper for any
 * renderable element, to surround it with a <div> and HTML attributes.
 * See \Drupal\Core\Render\Element\RenderElement for more
 * information on the #theme_wrappers render array property, and
 * \Drupal\Core\Render\Element\container for usage of the container render
 * element.
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - children: The rendered child elements of the container.
 * - has_parent: A flag to indicate that the container has one or more parent
     containers.
 *
 * @see template_preprocess_container()
 */
#}
{%
  set classes = [
    has_parent ? 'js-form-wrapper',
    has_parent ? 'form-wrapper',
  ]
%}

{% set llTopParallax = false %}
{% set llMiddleParallax = false %}
{% set llBillboard = false %}
{% set llBottomSection = false %}
{% set llRowImageText = false %}

{% if attributes.storage['id'] is defined %}
  {% set llTopParallax = ('top-parallax-wrapper' in attributes.storage['id'].__toString()) %}
  {% set llMiddleParallax = ('middle-parallax-wrapper' in attributes.storage['id'].__toString()) %}
  {% set llBillboard = ('billboard-wrapper' in attributes.storage['id'].__toString()) %}
  {% set llBottomSection = ('bottom-section-wrapper' in attributes.storage['id'].__toString()) %}
  {% set llRowImageText = ('row-of-image-text-wrapper' in attributes.storage['id'].__toString()) %}
{% endif %}

{% if (llTopParallax) %}
  <details open class="container-details">
    <summary>Top Parallax</summary>
{% elseif (llMiddleParallax) %}
  <details open class="container-details">
    <summary>Middle Parallax</summary>
{% elseif (llBillboard) %}
  <details open class="container-details">
    <summary>Billboard</summary>
{% elseif (llBottomSection) %}
  <details open class="container-details">
    <summary>Bottom Section</summary>
{% elseif (llRowImageText) %}
  <details open class="container-details">
    <summary>Row(s) of Image Text{{ (">Tile</h4>" in children.__toString()) ? ' for Tiles' : '' }}</summary>
{% endif %}

    <div{{ attributes.addClass(classes) }}>{{ children }}</div>

{% if (llTopParallax) or (llMiddleParallax) or (llBillboard) or (llBottomSection) or (llRowImageText) %}
  </details>
{% endif %}
